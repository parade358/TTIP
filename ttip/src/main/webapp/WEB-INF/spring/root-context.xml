<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 
	Root Context : 
	서버가 구동과 도잇에 web.xml 파일을 거쳐서 읽혀지는 문서
	-서버구동과 동시에 세팅해두어야하는 요소들을 작성해둔다.
	주로 db연결, 트랜잭션 처리, 모듈 연결 등등
	-->

	<!-- db 연결 설정 3단계 -->
	<!-- 1단계 db연결을 위한 도구 설정 -->

	<!-- bean 은 자바 객체와도 같다. -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
		<!-- 어떤 db에 접속할것인지 작성 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="TTIP"/>
		<property name="password" value="TTIP"/>
	</bean>

	<!-- BasicDataSource dataSource = new Basic... -->
	<!-- dataSource.setDriverClassName("oracle...") -->


	<!-- 2단계. Mybatis Spring 에서 제공하는 sql 명령어 실행을 위한 도구 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis 설정넣기 classpath : resources 폴더 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- <property name="mapperLocations" value="classpath:mappers/*-mapper.xml"/> -->
		<property name="mapperLocations" value="classpath:mappers/*-mapper.xml"></property>
		
		<!-- db생성정보 넣기 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- SqlSessionFactoryBean sqlSEssion Factory = new sqlSessionFactoryBean(); -->
	<!-- sqlSessionFactory.setDataSource(dataSource); -->

	<!-- 3단계 : sql구문을 실행시켜줄 템플릿을 제공하는 도구 등록 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- 참조설정 -->
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- SqlSessionTemplate sqlSessino = new SqlSessionTemplate(sqlSessionFactory); -->

	<!-- 파일 업로드 관련 빈 등록 -->
	<!-- 기본 MultipartResolver의 타입 -->
	<!-- <bean class="org.springframework.web.multipart.MultipartResolver"> -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<!-- 업로드 되는 파일에 대한 인코딩 처리 -->
	<property name="defaultEncoding" value="UTF-8"/>

	<property name="maxUploadSize" value="100000000"/> <!-- 업로드 파일 용량제한 -->
	<property name="maxInMemorySize" value="100000000"/> <!-- 메모리 보관 최대크기(임시저장크기) -->
	</bean>


	<!-- 
	트랜잭션 사용 설정 
	@Transactinal 어노테이션을 부여해야한다.
	해당 어노테이션을 읽으려면 설정이 필요하다.
	-->

	<tx:annotation-driven/>

	<!-- 트랜잭션 매니저 도구 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 
	AOP 관련 설정
	@Aspect와 관련된 어노테이션 활성화
	-->

	<aop:aspectj-autoproxy/>

	<!-- 
	component-scan 등록하기
	@Service, @Repository, @Aspect 를 스캔하는 설정 추가해주기
	use-default-filters : 기본스캔을 할지 여부 (true/false)
	-->

	<context:component-scan base-package="com.kh.ttip" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
	</context:component-scan>
	
	<!-- 
		스케쥴러 설정
		Namespaces 에서 task 체크하기
	-->
	<task:annotation-driven/>
	

</beans>